@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml"; // Sử dụng layout chung
    int total = 0;
    foreach (var tt in ViewBag.litsTT)
    {
        int soTien = 0;
        int.TryParse(tt[2]?.ToString().Replace(" VND", "").Replace(",", ""), out soTien);
        total += soTien;
    }
}
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Danh Sách Thanh Toán</title>
    <style>
        /* General styling */
        body {
            font-family: Arial, sans-serif;
            background-color: #f9f9f9;
            margin: 0;
            padding: 0;
        }

        .statistic-box {
            background: #f5faff;
            border: 2px solid #007bff;
            border-radius: 10px;
            padding: 24px 32px;
            margin: 30px auto 10px auto;
            max-width: 400px;
            text-align: center;
            box-shadow: 0 2px 8px rgba(0,0,0,0.07);
        }
        .statistic-box h2 {
            color: #007bff;
            font-size: 2.2rem;
            margin-bottom: 8px;
            font-weight: bold;
        }
        .statistic-box .stat-value {
            color: #d90707;
            font-size: 2.5rem;
            font-weight: bold;
        }
        .statistic-box .stat-label {
            color: #333;
            font-size: 1.1rem;
        }
        /* Table styling */
        .content-container {
            margin: 0 auto;
            max-width: 1200px; /* Tăng chiều rộng container */
            padding: 20px;
            background-color: #ffffff;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
        }

        h1 {
            text-align: center;
            color: #333;
            margin-bottom: 20px;
        }

        table {
            width: 100%; /* Đảm bảo bảng chiếm toàn bộ chiều rộng container */
            border-collapse: collapse;
            margin-top: 20px;
            background-color: #fdfdfd;
            border: 1px solid #ddd;
            border-radius: 8px;
            min-height: 400px; /* Đảm bảo bảng dài tối thiểu */
        }

        th, td {
            padding: 12px;
            text-align: center; /* Giữ nội dung căn giữa */
            border-bottom: 1px solid #ddd;
            word-wrap: break-word; /* Đảm bảo chữ dài không bị tràn */
        }

        th {
            background-color: #4CAF50;
            color: white;
            font-weight: bold;
        }

        tr:nth-child(even) td {
            background-color: #f7f7f7;
        }

        tr:hover {
            background-color: #f1f1f1;
        }

        /* Action buttons */
        .action-buttons {
            display: flex;
            justify-content: center;
            gap: 10px;
        }

        button {
            padding: 8px 12px;
            border: none;
            border-radius: 5px;
            font-size: 14px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        button.edit {
            background-color: #007bff;
            color: white;
        }

        button.edit:hover {
            background-color: #0056b3;
        }

        button.delete {
            background-color: #dc3545;
            color: white;
        }

        button.delete:hover {
            background-color: #c82333;
        }

        /* Add new button styling */
        .add-button {
            text-align: center;
            margin-top: 15px;
        }

        .add-button button {
            background-color: #28a745;
            color: white;
            font-size: 16px;
            padding: 10px 20px;
        }

        .add-button button:hover {
            background-color: #218838;
        }
    </style>
</head>
<body>
    <div class="statistic-box">
        <h2>Tổng số tiền thanh toán</h2>
        <div class="stat-value">@total.ToString("N0") VND</div>
        <div class="stat-label">Tổng cộng tất cả giao dịch trong danh sách</div>
    </div>
    <div class="content-container">
        <h1>Danh Sách Thanh Toán</h1>

        <!-- Payments Table -->
        <table>
            <thead>
                <tr>
                    <th>Mã Thanh Toán</th>
                    <th>Người Thanh Toán</th>
                    <th>Số Tiền</th>
                    <th>Thời Gian Thanh Toán</th>
                    <th>Lý Do Hoàn Phí</th>
                    <th>Ngày Hoàn Phí</th>
                    <th>Thao Tác</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var tt in ViewBag.litsTT)
                {
                    <tr id="paymentRow_@tt[0]">
                        <td>@tt[0]</td> 
                        <td>@tt[3]</td> 
                        <td>@tt[2] VND</td> 
                        <td>@tt[1]</td> 
                        <td>@tt[5]</td>
                        <td>@tt[6]</td>
                        <td>
                            <div class="action-buttons">
                                <form>
                                    <button type="button" class="edit" onclick="alertRefundNotAvailable()" title="Chức năng chưa phát triển">Hoàn phí khám</button>
                                </form>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Modal nhập lý do hoàn phí (đã ẩn vì chức năng chưa phát triển) -->
    <!--
    <div id="refundModal" style="display:none;"></div>
    <div id="modalOverlayRefund" style="display:none;"></div>
    -->

    <script>
        // Kiểm tra và hiển thị thông báo nếu có từ TempData
        @if (TempData["Message"] != null)
        {
            <text>
            alert("@Html.Raw(TempData["Message"])");
            </text>
        }
        @if (TempData["Error"] != null)
        {
            <text>
            alert("@Html.Raw(TempData["Error"])");
            </text>
        }

        // Function to check the amount before submitting the form
        function checkAmount(amount, paymentId) {
            // Parse the amount to remove non-numeric characters and check if it is zero
            var numericAmount = parseFloat(amount.replace(' VND', '').replace(',', '').trim());
            
            if (numericAmount === 0) {
                alert('Không có chi phí nào cần hoàn');
                return false; // Prevent form submission
            }
            return true; // Proceed with form submission
        }

        let currentRefundId = null;
        function openRefundModal(id) {
            currentRefundId = id;
            document.getElementById('refundReasonInput').value = '';
            document.getElementById('refundModal').style.display = 'block';
            document.getElementById('modalOverlayRefund').style.display = 'block';
            document.getElementById('currentRefundId').value = id;
            return false;
        }
        function closeRefundModal() {
            document.getElementById('refundModal').style.display = 'none';
            document.getElementById('modalOverlayRefund').style.display = 'none';
        }
        function submitRefund() {
            const reason = document.getElementById('refundReasonInput').value.trim();
            if (!reason) {
                alert('Vui lòng nhập lý do hoàn phí!');
                return;
            }
            const id = document.getElementById('currentRefundId').value;
            document.getElementById('refundReason_' + id).value = reason;
            // Submit form
            document.querySelector(`#paymentRow_${id} form`).submit();
            closeRefundModal();
        }

        function alertRefundNotAvailable() {
            alert('Chức năng hoàn phí khám hiện chưa phát triển. Vui lòng quay lại sau.');
        }
    </script>
</body>
</html>
